{{ ansible_managed | comment }}
# /etc/opt/rh/rh-haproxy18/haproxy/haproxy.cfg
#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # Log to stdout since we're in a container.
    log       stdout format raw local0 {{ haproxy_log_level }}
    pidfile   /var/run/haproxy.pid
    maxconn   1000
    user      root
    group     root
    daemon

#---------------------------------------------------------------------
# Common defaults that all the 'listen' and 'backend' sections will
#   use if not designated in their block.
#---------------------------------------------------------------------
defaults
    mode       http
    log        global
    balance    roundrobin
    option     httpchk GET /
    option     dontlognull
    option     http-server-close
    option     forwardfor except 127.0.0.0/8
    option     redispatch
    retries    3
    timeout    http-request    10s
    timeout    queue           1m
    timeout    connect         10s
    timeout    client          1m
    timeout    server          1m
    timeout    http-keep-alive 10s
    timeout    check           10s

#---------------------------------------------------------------------
# Frontend configuration
#---------------------------------------------------------------------

{% if haproxy_enable_stats -%}
frontend f_stats
    bind *:{{ haproxy_stats_port }}
    stats enable
    stats uri /
    stats refresh {{ haproxy_stats_refresh_interval }}
{% endif %}

frontend f_http
    bind *:{{ haproxy_http_port }}
    {% if haproxy_force_https -%}
    http-request redirect scheme https code 301 if !{ ssl_fc }
    {% endif %}

frontend f_https
    bind *:{{ haproxy_https_port }} ssl crt /usr/local/etc/haproxy/{{ haproxy_cert_filename }}

    {% if podman_deploy_home_assistant -%}
    acl acl_home_assistant path_beg /static/icons/ /static/fonts/ /static/translations/ /static/images/ /static/panels/ /static/polyfills /api/ /auth/ /frontend_latest/ /frontend_es5/ /local/ /lovelace /map /config /developer-tools /history /logbook /profile /states /hassio /onboarding.html /service_worker.js /authorize.html /manifest.json
    {% endif -%}

    {% if podman_deploy_pihole -%}
    acl acl_pihole path_beg /admin /{{ pihole_container_name }}
    {% endif -%}

    {% if podman_deploy_heimdall -%}
    acl acl_heimdall path_beg /{{ heimdall_container_name }} /css /js /img /favicon /items /users /apple-icon /ms-icon /tags /settings
    {% endif -%}

    {% if podman_deploy_home_assistant -%}
    use_backend b_{{ home_assistant_container_name }} if acl_home_assistant
    {% endif -%}

    {% if podman_deploy_pihole -%}
    use_backend b_{{ pihole_container_name }} if acl_pihole
    {% endif -%}

    {% if podman_deploy_heimdall -%}
    use_backend b_{{ heimdall_container_name }} if acl_heimdall
    {% endif -%}

    {% if haproxy_default_backend is defined -%}
    default_backend b_{{ haproxy_default_backend }}
    {% endif %}

#---------------------------------------------------------------------
# Backend configuration
#---------------------------------------------------------------------

{% if podman_deploy_heimdall -%}
backend b_{{ heimdall_container_name }}
    http-request replace-path /{{ heimdall_container_name }}/?(.*) /\1
    server s_{{ heimdall_container_name }} {{ heimdall_internal_ip }}:{{ heimdall_port }} check ssl verify none
{% endif %}

{% if podman_deploy_home_assistant -%}
backend b_{{ home_assistant_container_name }}
    server s_{{ home_assistant_container_name }} {{ ansible_host }}:{{ home_assistant_port }} check
{% endif %}

{% if podman_deploy_pihole -%}
backend b_{{ pihole_container_name }}
    server s_{{ pihole_container_name }} {{ pihole_internal_ip }}:{{ pihole_port }} check
{% endif %}
