---

- name: HOME_ASSISTANT | Config directory created
  ansible.builtin.file:
    path: "{{ home_assistant_config_dir }}/config_bind_mount"
    state: directory
    owner: "{{ podman_user }}"
    group: "{{ podman_user }}"
    mode: "0750"

- name: HOME_ASSISTANT | Environment file created
  ansible.builtin.file:
    path: "{{ home_assistant_config_dir }}/{{ home_assistant_container_name }}.env"
    owner: "{{ podman_user }}"
    group: "{{ podman_user }}"
    mode: "0640"
    state: touch
  changed_when: false

- name: HOME_ASSISTANT | Proxy config added
  ansible.builtin.copy:
    dest: "{{ home_assistant_config_dir }}/{{ home_assistant_container_name }}.env"
    content: |
      HTTP_PROXY={{ proxy_url }}
      HTTPS_PROXY={{ proxy_url }}
  when: use_proxy

- name: HOME_ASSISTANT | Container running
  containers.podman.podman_container:
    name: "{{ home_assistant_container_name }}"
    image: homeassistant/home-assistant:stable
    state: started
    env_file: "{{ home_assistant_config_dir }}/{{ home_assistant_container_name }}.env"
    restart_policy: on-failure:5
    env:
      TZ: "{{ timezone }}"
    publish:
      - "{{ home_assistant_port }}:{{ home_assistant_port }}"
    network: host
    volumes:
      - "{{ home_assistant_config_dir }}/config_bind_mount:/config"
      - /etc/localtime:/etc/localtime:ro

# On first startup, we must wait for the container to create its default
#   config files before we can deploy our own.
- name: HOME_ASSISTANT | Initial config dir created
  ansible.builtin.wait_for:
    path: "{{ home_assistant_config_dir }}/config_bind_mount/deps"

# Deploy the user's custom config files to overwrite the defaults.
- name: HOME_ASSISTANT | Configuration templates deployed
  ansible.builtin.template:
    src: home_assistant/{{ item }}.j2
    dest: "{{ home_assistant_config_dir }}/config_bind_mount/{{ item }}"
    mode: "0641"
  loop:
    - configuration.yaml
  register: configfiles

- name: HOME_ASSISTANT | Custom user config added to template
  ansible.builtin.blockinfile:
    path: "{{ home_assistant_config_dir }}/config_bind_mount/configuration.yaml"
    block: "{{ lookup('file', home_assistant_custom_config) }}"
  when: home_assistant_custom_config is defined

- name: HOME_ASSISTANT | Container restarted
  containers.podman.podman_container:
    name: "{{ home_assistant_container_name }}"
    image: homeassistant/home-assistant:stable
    force_restart: true
    env_file: "{{ home_assistant_config_dir }}/{{ home_assistant_container_name }}.env"
    restart_policy: on-failure:5
    env:
      TZ: "{{ timezone }}"
    publish:
      - "{{ home_assistant_port }}:{{ home_assistant_port }}"
    network: host
    volumes:
      - "{{ home_assistant_config_dir }}/config_bind_mount:/config"
      - /etc/localtime:/etc/localtime:ro
  when: configfiles.changed

- name: HOME_ASSISTANT | Systemd config deployed
  block:
    - name: HOME_ASSISTANT | Get container ID
      containers.podman.podman_container_info:
        name: home-assistant
      register: container_info

    - name: HOME_ASSISTANT | Set fact for container ID
      set_fact:
        home_assistant_id: "{{ container_info.containers[0].Id }}"

    - name: HOME_ASSISTANT | Systemd unit file deployed
      template:
        src: home_assistant/systemd/podman-home_assistant.service.j2
        dest: /etc/systemd/system/podman-{{ home_assistant_container_name }}.service
        seuser: system_u
        serole: object_r
        setype: systemd_unit_file_t
        mode: "0644"
        owner: root
        group: root

    - name: HOME_ASSISTANT | Systemd service enabled
      systemd:
        name: podman-{{ home_assistant_container_name }}.service
        enabled: true
        masked: false
        daemon_reload: true
