---

- name: HOME_ASSISTANT | Config directory created
  ansible.builtin.file:
    path: "{{ home_assistant_config_dir }}/config_bind_mount"
    state: directory
    mode: "0750"

- name: HOME_ASSISTANT | Environment file created
  ansible.builtin.file:
    path: "{{ home_assistant_config_dir }}/{{ home_assistant_container_name }}.env"
    mode: "0640"
    state: touch
  changed_when: false

- name: HOME_ASSISTANT | Proxy config added
  ansible.builtin.copy:
    dest: "{{ home_assistant_config_dir }}/{{ home_assistant_container_name }}.env"
    content: |
      HTTP_PROXY={{ proxy_url }}
      HTTPS_PROXY={{ proxy_url }}
  when: use_proxy

# - name: HOME_ASSISTANT | Check for systemd unit
#   ansible.builtin.stat:
#     path: /etc/systemd/system/podman-{{ home_assistant_container_name }}.service
#   register: unit_file

# - name: HOME_ASSISTANT | Container running (systemd)
#   systemd:
#     name: podman-{{ home_assistant_container_name }}.service
#     state: started
#   when: unit_file.stat.exists is defined

- name: HOME_ASSISTANT | Container running
  containers.podman.podman_container:
    name: "{{ home_assistant_container_name }}"
    image: homeassistant/home-assistant:stable
    env_file: "{{ home_assistant_config_dir }}/{{ home_assistant_container_name }}.env"
    restart_policy: on-failure:5
    log_level: "{{ home_assistant_log_level }}"
    log_driver: journald
    env:
      TZ: "{{ timezone }}"
    publish:
      - "{{ home_assistant_port }}:{{ home_assistant_port }}"
    network: host
    volumes:
      - "{{ home_assistant_config_dir }}/config_bind_mount:/config"
      - /etc/localtime:/etc/localtime:ro

# On first startup, we must wait for the container to create its default
#   config files before we can deploy our own.
- name: HOME_ASSISTANT | Wait for initial configuration
  ansible.builtin.wait_for:
    path: "{{ home_assistant_config_dir }}/config_bind_mount/deps"

# Deploy the user's custom config files to overwrite the defaults.
- name: HOME_ASSISTANT | Configuration templates deployed
  ansible.builtin.template:
    src: home_assistant/{{ item }}.j2
    dest: "{{ home_assistant_config_dir }}/config_bind_mount/{{ item }}"
    mode: "0641"
  loop:
    - configuration.yaml
  register: configfiles

- name: HOME_ASSISTANT | Custom user config added to template
  ansible.builtin.blockinfile:
    path: "{{ home_assistant_config_dir }}/config_bind_mount/configuration.yaml"
    block: "{{ lookup('file', home_assistant_custom_config) }}"
  when: home_assistant_custom_config is defined

- name: HOME_ASSISTANT | Container restarted
  containers.podman.podman_container:
    name: "{{ home_assistant_container_name }}"
    image: homeassistant/home-assistant:stable
    force_restart: true
    env_file: "{{ home_assistant_config_dir }}/{{ home_assistant_container_name }}.env"
    restart_policy: on-failure:5
    log_level: "{{ home_assistant_log_level }}"
    log_driver: journald
    env:
      TZ: "{{ timezone }}"
    publish:
      - "{{ home_assistant_port }}:{{ home_assistant_port }}"
    network: host
    volumes:
      - "{{ home_assistant_config_dir }}/config_bind_mount:/config"
      - /etc/localtime:/etc/localtime:ro
  when: configfiles.changed

- name: HOME_ASSISTANT | Systemd config deployed
  include: systemd.yml
  vars:
    service: "{{ home_assistant_container_name }}"
