---

- name: HAPROXY | HAProxy allowed in ufw
  community.general.ufw:
    proto: tcp
    rule: allow
    to_port: "{{ item }}"
  loop:
    - "{{ haproxy_http_port }}"
    - "{{ haproxy_https_port }}"
    - "{{ haproxy_stats_port }}"
  when: ansible_facts.os_family == "Debian"

- name: HAPROXY | HAProxy allowed in firewalld
  ansible.posix.firewalld:
    port: "{{ item }}"
    zone: "{{ firewalld_zone }}"
    immediate: true
    permanent: true
    state: enabled
  loop:
    - "{{ haproxy_http_port }}/tcp"
    - "{{ haproxy_https_port }}/tcp"
    - "{{ haproxy_stats_port }}/tcp"
  when: ansible_facts.os_family == "RedHat"

- name: HAPROXY | Config directory created
  ansible.builtin.file:
    path: "{{ haproxy_config_dir }}/config_bind_mount"
    state: directory
    mode: "0750"

- name: HAPROXY | Environment file created
  ansible.builtin.file:
    path: "{{ haproxy_config_dir }}/haproxy.env"
    mode: "0640"
    state: touch
  changed_when: false

- name: HAPROXY | Certificate imported
  ansible.builtin.copy:
    src: templates/haproxy/{{ haproxy_cert_filename }}
    dest: "{{ haproxy_config_dir }}/config_bind_mount"
    mode: "0440"

- name: HAPROXY | Configuration file deployed
  ansible.builtin.template:
    src: haproxy/haproxy.cfg.j2
    dest: "{{ haproxy_config_dir }}/config_bind_mount/haproxy.cfg"
    mode: "0640"

- name: HAPROXY | Container running
  containers.podman.podman_container:
    name: "{{ haproxy_container_name }}"
    image: haproxy:latest
    env_file: "{{ haproxy_config_dir }}/haproxy.env"
    restart_policy: on-failure:5
    publish:
      - "{{ haproxy_http_port }}:{{ haproxy_http_port }}"
      - "{{ haproxy_https_port }}:{{ haproxy_https_port }}"
      - "{{ haproxy_stats_port }}:{{ haproxy_stats_port }}"
    ip: "{{ haproxy_internal_ip }}"
    volumes:
      - "{{ haproxy_config_dir }}/config_bind_mount:/usr/local/etc/haproxy"

- name: HAPROXY | Systemd config deployed
  include: systemd.yml
  vars:
    service: "{{ haproxy_container_name }}"
