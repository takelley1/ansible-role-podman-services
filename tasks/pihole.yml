---

- name: PIHOLE | Config directories created
  ansible.builtin.file:
    path: "{{ pihole_config_dir }}/{{ item }}"
    state: directory
    mode: "0750"
  loop:
    - config_bind_mount
    - config_bind_mount/etc/pihole
    - config_bind_mount/etc/dnsmasq.d

- name: PIHOLE | Environment file created
  ansible.builtin.file:
    path: "{{ pihole_config_dir }}/pihole.env"
    mode: "0640"
    state: touch
  changed_when: false

- name: PIHOLE | Check for systemd unit
  ansible.builtin.stat:
    path: /etc/systemd/system/podman-{{ pihole_container_name }}.service
  register: unit_file

- name: PIHOLE | Container running (systemd)
  systemd:
    name: podman-{{ pihole_container_name }}.service
    state: started
  when: unit_file.stat.exists is defined

- name: PIHOLE | Container running (create)
  containers.podman.podman_container:
    name: "{{ pihole_container_name }}"
    image: pihole/pihole:latest
    env_file: "{{ pihole_config_dir }}/pihole.env"
    restart_policy: on-failure:5
    log_level: "{{ pihole_log_level }}"
    log_driver: journald
    env:
      TZ: "{{ timezone }}"
      WEBPASSWORD: "{{ pihole_web_password }}"
      PIHOLE_DNS_: "{{ pihole_upstream_dns }}"
      ServerIP: "{{ ansible_host }}"
      QUERY_LOGGING: "{{ pihole_query_logging }}"
    ip: "{{ pihole_internal_ip }}"
    volumes:
      - "{{ pihole_config_dir }}/config_bind_mount/etc/pihole:/etc/pihole"
      - "{{ pihole_config_dir }}/config_bind_mount/etc/dnsmasq.d:/etc/dnsmasq.d"
  when: unit_file.stat.exists is not defined

- name: PIHOLE | Systemd config deployed
  include: systemd.yml
  vars:
    service: "{{ pihole_container_name }}"
